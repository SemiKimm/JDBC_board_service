<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.nhnacademy.jdbc.board.post.mapper.PostMapper">
    <select id="selectPost" resultType="com.nhnacademy.jdbc.board.post.domain.Post">
        select post_no, post_title, post_content, write_datetime, reply_order, user_no, board_type_code, parent_post_no, top_post_no, modifier_user_no,modify_datetime
        from post
        where post_no = #{no} and is_delete = false
    </select>

    <select id="selectPostList" resultType="com.nhnacademy.jdbc.board.post.dto.PostListDTO">
        select P.post_no
             , post_title
             , P.user_no
             , P.modifier_user_no
             , W.user_nickname
             , M.user_nickname as modifer_user_nickname
             , write_datetime
             , C.comment_count
             , reply_order
             , parent_post_no
             , top_post_no
        from post P
                 left outer join
             (select post_no, count(*) as comment_count
              from comment
              group by (post_no)) C
             on P.post_no = C.post_no
                 inner join user W
                            on P.user_no = W.user_no
                 left outer join user M
                                 on P.modifier_user_no = M.user_no
        where is_delete = false
        order by post_no desc limit #{pageLimit} offset #{pageOffset}
    </select>

    <select id="selectPagePosts" resultType="com.nhnacademy.jdbc.board.post.domain.Post"> -- join 안쓴 post list 쓰던거 (comment count 안나오는거)
        select post_no, post_title, post_content, write_datetime, reply_order, user_no,modifier_user_no, board_type_code, parent_post_no, top_post_no
        from post where is_delete = false limit #{pageLimit} offset #{pageOffset}
    </select>

    <select id="selectPostNumbers" resultType="java.lang.Integer">
        select post_no
        from post where is_delete = false
    </select>

<!--    답글용이랑 본글용이랑 insert 따로 만들어야 될듯-->
    <insert id="insertPost">
        insert into post(post_title, post_content, write_datetime, reply_order,
                         user_no, board_type_code, is_delete) -- todo
        values (#{postTitle}, #{postContent}, #{writeDateTime},
                #{replyOrder}, #{userNo}, #{boardTypeCode}, #{isDelete})
    </insert>

    <update id="updatePostByNo">
        update post
        set post_title = #{post.postTitle},post_content = #{post.postContent},modifier_user_no = #{post.modifierUserNo},modify_datetime = #{post.modifyDatetime}
            where post_no = #{post.postNo}
    </update>

    <update id="deleteByNo">
        update post set is_delete = true where post_no = #{no}
    </update>

    <select id="selectDeletedPosts" resultType="com.nhnacademy.jdbc.board.post.dto.PostListDTO">
        select P.post_no
             , post_title
             , P.user_no
             , P.modifier_user_no
             , W.user_nickname
             , M.user_nickname as modifer_user_nickname
             , write_datetime
             , C.comment_count
             , reply_order
             , parent_post_no
             , top_post_no
        from post P
                 left outer join
             (select post_no, count(*) as comment_count
              from comment
              group by (post_no)) C
             on P.post_no = C.post_no
                 inner join user W
                            on P.user_no = W.user_no
                 left outer join user M
                                 on P.modifier_user_no = M.user_no
        where is_delete = true
        order by post_no desc
    </select>

    <update id="restoreDeletedPost">
        update post
        set is_delete = false
        where post_no = #{deletedPostNo}
    </update>

    <select id="selectDeletedPost" resultType="com.nhnacademy.jdbc.board.post.domain.Post">
        select post_no, post_title, post_content, write_datetime, reply_order, user_no, board_type_code, parent_post_no, top_post_no, modifier_user_no,modify_datetime
        from post
        where post_no = #{deletedPostNo}

    </select>
</mapper>
